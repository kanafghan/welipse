[comment encoding = UTF-8 /]
[module Link2HTML('http://github.com/kanafghan/welipse/webdsl/1.0', 'http://github.com/kanafghan/welipse/joomlagen/1.0', 'http://www.eclipse.org/emf/2002/Ecore')]

[import com::github::kanafghan::welipse::joomlagen::generator::common::common /]
[import com::github::kanafghan::welipse::joomlagen::generator::common::UtilsServices /]
[import com::github::kanafghan::welipse::joomlagen::generator::Text2HTML /]
[import com::github::kanafghan::welipse::joomlagen::generator::Image2HTML /]

[template public generateLink(link : Link, genModel : JoomlaGenModel)]
	[if (link.oclIsKindOf(InternalLink))]
		[generateInternalLink(link.oclAsType(InternalLink), genModel)/]
	[/if]
	[if (link.oclIsKindOf(ExternalLink))]
		[generateExternalLink(link.oclAsType(ExternalLink), genModel)/]
	[/if]
[/template]

[template public generateInternalLink(link : InternalLink, genModel : JoomlaGenModel) ]
<a href="[buildURL(link, genModel)/]"[generateAttributes(link, genModel)/]>[generateLinkContent(link.content, genModel)/]</a>
[/template]

[template public generateAttributes(link : Link, genModel : JoomlaGenModel) post (trim())]
[if (link.name.size() > 0)]id="[link.name/]"[/if]
[/template]

[comment TODO complete the implemenation (href needs value) /]
[template public generateExternalLink(link : ExternalLink, genModel : JoomlaGenModel) ]
<a href=""[generateAttributes(link, genModel)/]>[generateLinkContent(link.content, genModel)/]</a>
[/template]

[template public buildURL(link : Link, genModel : JoomlaGenModel) post (trim())]
[if (link.oclIsKindOf(InternalLink))]?option=[getComponent(genModel)/]&view=[link.oclAsType(InternalLink).target.name.toLower()/][if (link.content.oclIsKindOf(DynamicText))]&id=<?php echo $this->[getObjectName(link.content.oclAsType(DynamicText).content.oclAsType(ETypedElement))/]->[getObjectAttributeName(link.content.oclAsType(DynamicText).content.oclAsType(ETypedElement))/][/if][/if]
[/template]

[template public generateLinkContent(element : PageElement, genModel : JoomlaGenModel) ]
	[if (element.oclIsKindOf(Text))]
		[generateText(element.oclAsType(Text))/]
	[/if]
	[if (element.oclIsKindOf(Image))]
		[generateImage(element.oclAsType(Image), genModel)/]
	[/if]
[/template]